@implements IDisposable
@inject IShoppingCartService shoppingCartService

@*<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ShoppingMall.Web</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>
    </nav>
</div>*@

@*<nav class="">*@
<div class="container-fluid px-4 px-lg-5">
        <a class="navbar-brand" href="">SH SHOP</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
</div>
<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        @*<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button>*@
    <nav class="flex-row">
            @*<ul class="navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4">*@
        <div class="nav-item"><NavLink class="nav-link active" aria-current="page" href="#!" style="padding:0px">Home</NavLink></div>
        <div class="nav-item"><NavLink class="nav-link" href="counter" style="padding:0px">Counter</NavLink></div>
        <div class="nav-item"><NavLink class="nav-link" href="fetchdata" style="padding:0px">Fetch data</NavLink></div>
                
            @*</ul>*@
            @*<div class="d-flex">
            <CartMenu />*@
                @*<button class="btn btn-outline-dark" type="submit">
                    <i class="bi-cart-fill me-1"></i>
                    Cart
                    <span class="badge bg-dark text-white ms-1 rounded-pill">0</span>
                </button>*@
            @*</div>*@
        </nav>
    </div>
    <div class="d-flex">
            <CartMenu />
</div>
    
@*</nav>*@

@*<a class="navbar-brand" href="">
    SH SHOP
</a>
<button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
    <span class="navbar-toggler-icon"></span>
</button>
<div class="@NavMenuCssClass navbar-collapse collapse  d-sm-inline-flex justify-content-between" @onclick="ToggleNavMenu" id="navbarColor03">
    <ul class="row flex-row navbar-nav d-flex justify-content-center align-items-center flex-grow-1">
        <li class="nav-item">
            <NavLink class="nav-link text-dark" href="" Match="NavLinkMatch.All">Home</NavLink>
        </li>

        <li class="nav-item">
            <NavLink class="nav-link text-dark" href="counter">Counter</NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link text-dark" href="fetchdata">Fetch data</NavLink>
        </li>
    </ul>
</div>*@


@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private int shoppingCartItemsCount = 0;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override void OnInitialized()
    {
        shoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
    }
    private void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemsCount = totalQty;
        StateHasChanged();
    }
    void IDisposable.Dispose()
    {
        shoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }
}
